////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Seg7_Dev.vf
// /___/   /\     Timestamp : 12/08/2020 01:10:14
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family kintex7 -verilog D:/fundamentallogic/RTL/Seg7_Dev.vf -w D:/fundamentallogic/RTL/Seg7_Dev.sch
//Design Name: Seg7_Dev
//Device: kintex7
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module ScanSync_MUSER_Seg7_Dev(Hexs, 
                               LES, 
                               point, 
                               Scan, 
                               AN, 
                               Hexo, 
                               LE, 
                               p);

    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
   output [3:0] AN;
   output [3:0] Hexo;
   output LE;
   output p;
   
   wire [7:0] COM;
   wire G0;
   wire [7:0] Hex;
   wire V5;
   
   MUX8T1_8  XLXI_1 (.I0({Hexs[3:0], G0, G0, G0, G0}), 
                    .I1({Hexs[7:4], G0, G0, G0, G0}), 
                    .I2({Hexs[11:8], G0, G0, G0, G0}), 
                    .I3({Hexs[15:12], G0, G0, G0, G0}), 
                    .I4({Hexs[19:16], G0, G0, G0, G0}), 
                    .I5({Hexs[23:20], G0, G0, G0, G0}), 
                    .I6({Hexs[27:24], G0, G0, G0, G0}), 
                    .I7({Hexs[31:28], G0, G0, G0, G0}), 
                    .s(Scan[2:0]), 
                    .o(Hex[7:0]));
   MUX8T1_8  XLXI_2 (.I0({LES[0], point[0], G0, G0, V5, V5, V5, G0}), 
                    .I1({LES[1], point[1], G0, G0, V5, V5, G0, V5}), 
                    .I2({LES[2], point[2], G0, G0, V5, G0, V5, V5}), 
                    .I3({LES[3], point[3], G0, G0, G0, V5, V5, V5}), 
                    .I4({LES[4], point[4], G0, G0, V5, V5, V5, G0}), 
                    .I5({LES[5], point[5], G0, G0, V5, V5, G0, V5}), 
                    .I6({LES[6], point[6], G0, G0, V5, G0, V5, V5}), 
                    .I7({LES[7], point[7], G0, G0, G0, V5, V5, V5}), 
                    .s(Scan[2:0]), 
                    .o(COM[7:0]));
   VCC  XLXI_11 (.P(V5));
   GND  XLXI_12 (.G(G0));
   BUF  XLXI_13 (.I(Hex[4]), 
                .O(Hexo[0]));
   BUF  XLXI_14 (.I(Hex[5]), 
                .O(Hexo[1]));
   BUF  XLXI_15 (.I(Hex[6]), 
                .O(Hexo[2]));
   BUF  XLXI_16 (.I(Hex[7]), 
                .O(Hexo[3]));
   BUF  XLXI_17 (.I(COM[7]), 
                .O(LE));
   BUF  XLXI_18 (.I(COM[6]), 
                .O(p));
   BUF  XLXI_19 (.I(COM[3]), 
                .O(AN[3]));
   BUF  XLXI_20 (.I(COM[2]), 
                .O(AN[2]));
   BUF  XLXI_21 (.I(COM[1]), 
                .O(AN[1]));
   BUF  XLXI_22 (.I(COM[0]), 
                .O(AN[0]));
endmodule
`timescale 1ns / 1ps

module Seg7_Dev(flash, 
                Hexs, 
                LES, 
                point, 
                Scan, 
                SW0, 
                AN, 
                SEGMENT);

    input flash;
    input [31:0] Hexs;
    input [7:0] LES;
    input [7:0] point;
    input [2:0] Scan;
    input SW0;
   output [3:0] AN;
   output [7:0] SEGMENT;
   
   wire [3:0] Hex;
   wire [7:0] seg;
   wire XLXN_30;
   wire XLXN_31;
   wire XLXN_32;
   wire [7:0] XLXN_33;
   wire XLXN_34;
   
   ScanSync_MUSER_Seg7_Dev  XLXI_1 (.Hexs(Hexs[31:0]), 
                                   .LES(LES[7:0]), 
                                   .point(point[7:0]), 
                                   .Scan(Scan[2:0]), 
                                   .AN(AN[3:0]), 
                                   .Hexo(Hex[3:0]), 
                                   .LE(XLXN_32), 
                                   .p(XLXN_30));
   MC14495_ZJU  XLXI_2 (.D0(Hex[0]), 
                       .D1(Hex[1]), 
                       .D2(Hex[2]), 
                       .D3(Hex[3]), 
                       .LE(XLXN_31), 
                       .point(XLXN_30), 
                       .a(seg[0]), 
                       .b(seg[1]), 
                       .c(seg[2]), 
                       .d(seg[3]), 
                       .e(seg[4]), 
                       .f(seg[5]), 
                       .g(seg[6]), 
                       .p(seg[7]));
   Seg_map  XLXI_3 (.Hexs(Hexs[31:0]), 
                   .Scan(Scan[2:0]), 
                   .Segg_map(XLXN_33[7:0]));
   MUX2T1_8  XLXI_4 (.I0(XLXN_33[7:0]), 
                    .I1(seg[7:0]), 
                    .s(XLXN_34), 
                    .o(SEGMENT[7:0]));
   AND2  XLXI_11 (.I0(XLXN_32), 
                 .I1(flash), 
                 .O(XLXN_31));
   INV  XLXI_12 (.I(SW0), 
                .O(XLXN_34));
endmodule
